[MetricPlannerParameters]
planner_update_period_ms       = 100
planning_horizon_s             = 5.0
simulator_timestep_s           = 0.05
should_debug_grids             = 0
should_debug_dynamic_objects   = 0
grid_rebuild_interval_ms       = 1500
controller_config_file         = motion_controller.cfg
robot_model_config_file        = robot_model.cfg
progress_warning_time_window_s =  1.0
progress_warning_theshold      = -0.01

max_safe_position_std_dev = 0.1
max_safe_heading_std_dev  = 0.1

# chance constraint
use_chance_constraint        = 0
min_acceptable_survivability = 0.9

################################################################################
[ObstacleDistanceGridBuilderParameters]
is_unobserved_obstacle  = 1
should_grow_obstacle    = 1
grow_obstacle_radius_m  = 0.00
max_obstacle_distance_m = 20

################################################################################
[NavigationGridBuilderParameters]
# static-object occupancy cost
should_propagate_obstacle_cost = 1
robot_short_radius_m           = 0.30
robot_long_radius_m            = 0.65
propagate_cost_radius_m        = 0.5
propagated_obstacle_cost       = 0.4

# quasi-static-object occupancy cost
should_add_quasi_static_objects   = 0
quasi_static_prediction_time_s    = 5
quasi_static_object_cost_length_s = 0
quasi_static_object_cost_radius_m = 0.25
quasi_static_object_cost_peak     = 0.4
quasi_static_object_cost_slope    = 0.0

################################################################################
[NavigationTaskParameters]
# is-a-task-safe-to-execute
minimum_allowed_distance_from_walls_m = 0.55

# is-converged
convergence_radius_m  = 10.0
convergence_angle_rad = 0.15

# align to vector field
should_use_orientation_heuristic   = 1
orientation_heuristic_weight       = 3.0
# manipulating vector field near goal
align_to_goal_orientation_radius_m = 0.10

# default radial distance for goal neighborhood
goal_neighborhood_radius = 2.0

# non-holonomic distance params
should_use_nonholonomic_distance_near_goal   = 0
nonholonomic_distance_kPhi                   = 1.2
nonholonomic_distance_kDelta                 = 2.0
nonholonomic_distance_reference_heading_type = gradient
# reference heading type = 'gradient' or 'smooth'. 'gradient' is recommended.

# dwell-time heuristic
should_use_dwell_time = 1
dwell_time_weight     = 0.12
# preferred approach speed = sqrt(dwell_time_weight/action_cost_weight_linear_vel)
# dwell_time_weight = sqrt(0.5 * desired_ratio_of_approach_speed_to_cruse_speed) / action_cost_weight_linear_vel

learned_norm_filename = ../data/social_norms/norms_3_3.bin

# other options
should_use_rrt = 0

################################################################################
[DynamicObjectFilterParameters]
stale_object_time_ms = 1000
max_object_speed = 2.0

max_trusted_velocity_std_dev     = 0.4
start_untrusted_velocity_std_dev = 0.3

min_goal_probability = 0.75

should_slowdown_objects_behind_robot = 0
slowdown_cone_width_degrees          = 60
blind_cone_radius_m                  = 0.1

[DynamicObjectSimulatorParameters]
should_predict_object_velocities     = 1
velocity_prediction_lookahead_time_s = 1.0
agent_reaction_time_s                = 0.5

################################################################################
[TrajectoryEvaluatorParameters]
time_between_samples_s = 0.5

dynamic_object_has_fixed_radius  = 0
fixed_dynamic_object_radius_m    = 0.20
consider_only_the_closest_object = 0

min_passing_radius_static_obstacle_m = 0.02
min_passing_radius_dynamic_object_m  = 0.02

uncertainty_min_std_static_obstacle = 0.02
uncertainty_min_std_dynamic_object  = 0.01
uncertainty_std_weight_linear_vel   = 0.04
uncertainty_std_weight_angular_vel  = 0.005

negative_velocity_cost_multiplier = 3.0
action_cost_weight_linear_vel     = 0.3
action_cost_weight_angular_vel    = 0.3
action_cost_weight_linear_accel   = 0.2
action_cost_weight_angular_accel  = 0.2
# small action cost: linear 0.2 angular 0.1, preferred speed ~ 2.0m/s
# med action cost: linear 0.3 angular 0.15, preferred speed ~ 1.5m/s
# high action cost: linear 0.4 angular 0.2, preferred speed ~ 1.0m/s
# preferred speed <= 1/2/c_v

base_piecewise_collision_cost   = 0.5
velocity_weight_collision_cost  = 0.5
should_consider_collision_area  = 0
collision_area_weight           = 0.1

path_cost_angular_travel_weight = 0.2

################################################################################
[MPEPCOptimizerParameters]
target_list_file = initial_optimization_targets.txt
use_global_optimizer = 1
use_local_optimizer  = 1

# max iterations
max_global_iterations = 500
max_local_iterations  = 280

# search bounds
min_radius        = -3.0
max_radius        =  8.5
min_theta         = -1.2
max_theta         =  1.2
min_delta         = -2.0
max_delta         =  2.0
min_velocity_gain =  0.3
max_velocity_gain =  1.5

# convergence criteria
tolerance_multiplier_for_coarse_optimization = 2

radius_tolerance   = 0.005
theta_tolerance    = 0.005
delta_tolerance    = 0.005
gain_tolerance     = 0.001
function_tolerance = 0.005

# initial search step
radius_initial_step = 0.05
theta_initial_step  = 0.01
delta_initial_step  = 0.01
gain_initial_step   = 0.01

# finite differencing
radius_gradient_step_size = 0.005
theta_gradient_step_size  = 0.001
delta_gradient_step_size  = 0.001
gain_gradient_step_size   = 0.001
