/* Copyright (C) 2010-2019, The Regents of The University of Michigan.
 All rights reserved.

 This software was developed as part of the The Vulcan project in the Intelligent Robotics Lab
 under the direction of Benjamin Kuipers, kuipers@umich.edu. Use of this code is governed by an
 MIT-style License that can be found at "https://github.com/h2ssh/Vulcan".
*/


#ifndef LCMTYPES_LCM_TYPES_H
#define LCMTYPES_LCM_TYPES_H

/**
 * lcm_types.h is a meta-include file for all LCM messages that are used by Vulcan. In the Vulcan
 * implementation of LCM, each LCM type needs to be defined by more than just the .lcm description
 * of the used by lcm-gen. Each type requires the following implementation:
 *
 * 0) A .lcm description of the type
 *
 * 1) A conversion from lcm type to vulcan type with this signature:
 *       void convert_lcm_to_vulcan(const lcm_type& lcm, vulcan_type& vulcan);
 *
 * 2) A conversion from vulcan type to lcm type with this signature:
 *       void convert_vulcan_to_lcm(const vulcan_type& vulcan, lcm_type& lcm);
 *
 * 3) A publish function that calls the lcm publish message and handles type conversion:
 *       void publish_data(lcm_t* lcm, const vulcan_type& vulcan, std::string channel);
 *
 * 4) A subcribe function that creates a subscription to the lcm message type:
 *       void subscribe_to_message(lcm_t* lcm, void (*callback)(const vulcan_type&, const std::string&, void*),
 * std::string channel, void* userdata);
 *
 * If the channel is "" in either the publish or subscribe function calls, then the default channel
 * name is to be used.
 *
 * The above functions are all to be declared in the vulcan::lcm names and placed in a header file with
 * the name 'type.h' placed in the lcmtypes/ directory. The filename should not include the package extensions
 * that are generated by lcm-gen. For example, example_t.lcm with packages vulcan and lcm generates a type
 * called vulcan_lcm_example_t. That type would then have the above functionality defined in a file called
 * 'example_t.h'.
 *
 * The header for each defined type should be placed in this file.
 */

// Sensor messages -- maintained for backwards-compatibility with old log files
#include "lcmtypes/legacy/commanded_joystick_t.h"
#include "lcmtypes/legacy/commanded_velocity_t.h"
#include "lcmtypes/legacy/encoder_data_t.h"
#include "lcmtypes/legacy/imu_t.h"
#include "lcmtypes/legacy/joystick_command_t.h"
#include "lcmtypes/legacy/laser_t.h"
#include "lcmtypes/legacy/odometry_t.h"
#include "lcmtypes/legacy/velocity_command_t.h"

// Robot state messages for communication with other programming languages
#include "lcmtypes/state/robot_pose_t.h"

#endif   // LCM_TYPES_H
